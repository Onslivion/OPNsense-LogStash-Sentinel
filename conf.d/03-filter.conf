filter {
  if [type] == "firewall" {
    grok {
      match => {"message" => "%{POSINT:[log][syslog][priority]}?(%{INT:[log][syslog][version]}\s*)?(%{SYSLOGTIMESTAMP:[event][created]}|%{TIMESTAMP_ISO8601:[event][created]})\s(%{SYSLOGHOST:[host][name]}\s+)?%{PROG:[process][name]}\s*?(\[)?%{POSINT:[process][pid]}(\]:)?\s*(\-\s*\-)?\s*%{GREEDYDATA:filter_message}|%{POSINT:[log][syslog][priority]}?(%{INT:[log][syslog][version]}\s*)?(%{SYSLOGTIMESTAMP:[event][created]}|%{TIMESTAMP_ISO8601:[event][created]})\s(%{SYSLOGHOST:[host][name]}\s+)?%{PROG:[process][name]}\:\s%{GREEDYDATA:filter_message}"}
      }
    date {
      match => [ "[event][created]", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
      target => "[event][created]"
      timezone => "CHANGE ME"
      }
  }

  if [process][name] == "filterlog" {
    grok {
      match => { "message" => "[^:]*: %{GREEDYDATA:filterlog_csv}"}
    }

    mutate {
      gsub => [ "filterlog_csv", "\n", "" ] 
      split => {"filterlog_csv" => "," }
    }

    # [Packetfilter]
    # rulenr, subrulenr, anchorname, label | "0", interface, reason, action, dir, ipversion
    mutate {
      add_field => {
        "[rulenr]" =>      "%{[filterlog_csv][0]}"
#        "[subrulenr]" =>   "%{[filterlog_csv][1]}"
#        "[anchorname]" =>  "%{[filterlog_csv][2]}"
        "[label]" =>       "%{[filterlog_csv][3]}"
        "[interface]" =>   "%{[filterlog_csv][4]}"
#        "[reason]" =>      "%{[filterlog_csv][5]}"
        "[action]" =>      "%{[filterlog_csv][6]}"
        "[dir]" =>         "%{[filterlog_csv][7]}"
        "[ipversion]" =>   "%{[filterlog_csv][8]}"
      }
    }
    mutate {
      rename => {
        "[interface]" => "[interface][name]"
      }
      convert => {
        "[rulenr]" => "integer"
        "[ipversion]" => "integer"
      }
    }
    # [IPv4]
    # [Packetfilter], tos, ecn, ttl, id, offset, flags, protonum, protoname, length, src, dst
    if [ipversion] == 4 {
      mutate {
      add_field => {
#         "[tos]" =>  "%{[filterlog_csv][9]}"
#         "[ecn]" =>  "%{[filterlog_csv][10]}"
#         "[ttl]" =>  "%{[filterlog_csv][11]}"
#         "[id]" => "%{[filterlog_csv][12]}"
#         "[offset]" => "%{[filterlog_csv][13]}"
#         "[flags]" =>  "%{[filterlog_csv][14]}"
          "[protonum]" => "%{[filterlog_csv][15]}"
          "[protoname]" =>  "%{[filterlog_csv][16]}"
          "[length]" => "%{[filterlog_csv][17]}"
          "[sourceip]" => "%{[filterlog_csv][18]}"
          "[destinationip]" =>  "%{[filterlog_csv][19]}"
        }
      }
      # [TCP]
      # [Packetfilter][IPv4], srcport, dstport, datalen, flags, seq, ack, window, urg, options
      if [protoname] == "tcp" {
        mutate {
          add_field => {
            "[srcport]" => "%{[filterlog_csv][20]}"
            "[dstport]" => "%{[filterlog_csv][21]}"
            "[datalen]" => "%{[filterlog_csv][22]}"
#           "[flags]" =>   "%{[filterlog_csv][23]}"
            "[seq]" =>     "%{[filterlog_csv][24]}"
#           "[ack]" =>     "%{[filterlog_csv][25]}"
#           "[window]" =>  "%{[filterlog_csv][26]}"
#           "[urg]" =>     "%{[filterlog_csv][27]}"
#           "[options]" => "%{[filterlog_csv][28]}"
          }
        }
        mutate {
          convert => {
            "[seq]" => "integer"
          }
        }
      }
      # [UDP]
      # [Packetfilter][IPv4], srcport, dstport, datalen
      if [protoname] == "udp" {
        mutate {
          add_field => {
            "[srcport]" => "%{[filterlog_csv][20]}"
            "[dstport]" => "%{[filterlog_csv][21]}"
            "[datalen]" => "%{[filterlog_csv][22]}"
          }
        }
      }
    }

    # [IPv6]
    # [Packetfilter], tos, ecn, ttl, id, offset, flags, protonum, protoname, length, src, dst
    if [ipversion] == 6 {
      mutate {
        add_field => {
 #          "[class]" =>  "%{[filterlog_csv][9]}"
 #          "[flow]" => "%{[filterlog_csv][10]}"
 #          "[hoplimit]" => "%{[filterlog_csv][11]}"
            "[protoname]" =>  "%{[filterlog_csv][12]}"
            "[protonum]" => "%{[filterlog_csv][13]}"
            "[length]" => "%{[filterlog_csv][14]}"
            "[sourceip]" => "%{[filterlog_csv][15]}"
            "[destinationip]" =>  "%{[filterlog_csv][16]}"
        }
      }
      # [TCP]
      # [Packetfilter][IPv6], srcport, dstport, datalen, flags, seq, ack, window, urg, options
      if [protoname] == "tcp" {
        mutate {
          add_field => {
            "[srcport]" => "%{[filterlog_csv][17]}"
            "[dstport]" => "%{[filterlog_csv][18]}"
            "[datalen]" => "%{[filterlog_csv][19]}"
#            "[flags]" =>   "%{[filterlog_csv][20]}"
            "[seq]" =>     "%{[filterlog_csv][21]}"
#            "[ack]" =>     "%{[filterlog_csv][22]}"
#            "[window]" =>  "%{[filterlog_csv][23]}"
#            "[urg]" =>     "%{[filterlog_csv][24]}"
#            "[options]" => "%{[filterlog_csv][25]}"
          }
        }
        mutate {
          convert => {
            "[seq]" => "integer"
          }
        }
      }
      # [UDP]
      # [Packetfilter][IPv6], srcport, dstport, datalen
      if [protoname] == "udp" {
        mutate {
          add_field => {
            "[srcport]" => "%{[filterlog_csv][17]}"
            "[dstport]" => "%{[filterlog_csv][18]}"
            "[datalen]" => "%{[filterlog_csv][19]}"
          }
        }
      }
    }
    mutate {
     
      convert => {
        "[protonum]" => "integer"
        "[length]" => "integer"
        "[srcport]" => "integer"
        "[dstport]" => "integer"
        "[datalen]" => "integer"
      }      

      remove_field => [ "filterlog_csv" ]
      remove_field => [ "syslog_message" ]
      remove_field => [ "message" ]
    }
  }
}
